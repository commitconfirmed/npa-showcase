# Unnumbered BGP underlay for leafs and spines

# Doing this I've learnt that Arista supplied 
# modules are quite buggy and cumbersome
# will stick with eos_config in future modules...
---
- name: Enable IPv4+6 routing
  arista.eos.eos_config:
    lines:
      - "ip routing"
      - "ip routing ipv6 interface"
      - "ipv6 unicast-routing"
      - "switchport default mode routed"
      - "spanning-tree mode none"

# So much yml for 1 line of config... :)
- name: Configure Loopback prefix-list (Leaf + Spine)
  arista.eos.eos_prefix_lists:
    config:
      - afi: "ipv4"
        prefix_lists:
          - name: "LOOPBACK"
            entries:
              - sequence: 10
                action: "permit"
                address: "10.0.0.0/23"
                match:
                  masklen: 32
                  operator: "eq"

- name: Configure Loopback route-map (Leaf + Spine)
  arista.eos.eos_route_maps:
    config:
      - route_map: "LOOPBACK"
        entries:
          - action: "permit"
            sequence: 10
            match:
              ip:
                address:
                  prefix_list: "LOOPBACK"
          - action: "deny"
            sequence: 65535

- name: Configure BGP Peer Filter (Spine)
  arista.eos.eos_config:
    lines:
      - "10 match as-range 65100-65200 result accept"
    parents:
      - "peer-filter {{ bgp.listen.underlay['peer_filter'] }}"
  when:
    - bgp.listen.underlay is defined

# Causing errors on replays, moving to eos_config
#- name: Configure BGP peer group (Leaf + Spine)
#  arista.eos.eos_bgp_global:
#    config:
#      as_number: "{{ bgp['local_as'] }}"
#      router_id: "{{ router_id }}"
#      redistribute:
#        - protocol: "connected"
#          route_map: "LOOPBACK"
#      neighbor:
#        - neighbor_address: "{{ bgp['underlay_pg_id'] }}"
#          peer_group: "{{ bgp['underlay_pg_id'] }}"
#          send_community:
#            set: true
#  when: 
#    - bgp.underlay_pg_id is defined

- name: Configure BGP peer group (Leaf + Spine)
  arista.eos.eos_config:
    lines:
      - "router-id {{ router_id }}"
      - "redistribute connected route-map LOOPBACK"
      - "neighbor {{ bgp.underlay_pg_id }} peer group"
      - "neighbor PG_UNDERLAY send-community"
    parents:
      - "router bgp {{ bgp.local_as }}"
  loop: "{{ bgp.neighbors.underlay }}"
  when: 
    - bgp.neighbors.underlay is defined

# Doesn't look like interface based neighbors are supuported in eos_bgp module yet so need to use eos_config
# https://docs.ansible.com/ansible/latest/collections/arista/eos/eos_bgp_global_module.html
- name: Configure BGP Unnumbered neighbors (Leaf)
  arista.eos.eos_config:
    lines:
      - "neighbor interface {{ item.if }} peer-group {{ bgp['underlay_pg_id'] }} remote-as {{ bgp['remote_as'] }}"
    parents:
      - "router bgp {{ bgp['local_as'] }}"
  loop: "{{ bgp.neighbors.underlay }}"
  when: 
    - bgp.neighbors.underlay is defined

# Doesn't work, see https://github.com/ansible-collections/arista.eos/issues/477
#- name: Configure BGP listen (Spine)
#  arista.eos.eos_bgp_global:
#    config:
#      as_number: "{{ bgp['local_as'] }}"
#      bgp_params:
#        listen:
#          limit: 10
#          range: 
#            address: "{{ bgp.listen.underlay['listen_range'] }}"
#            peer_group:
#              name: "{{ bgp['underlay_pg_id']}}"
#              peer_filter: "{{ bgp.listen.underlay['peer_filter']}}"          
#  when: 
#    - bgp.listen.underlay is defined

- name: Configure BGP listen (Spine)
  arista.eos.eos_config:
    lines:
      - "bgp listen range {{ bgp.listen.underlay['listen_range'] }} peer-group {{ bgp['underlay_pg_id']}} peer-filter {{ bgp.listen.underlay['peer_filter']}}"
    parents:
      - "router bgp {{bgp['local_as']}}"
  when:
    - bgp.listen.underlay is defined

- name: Configure Address Families (Leaf + Spine)
  arista.eos.eos_bgp_address_family:
    config:
      as_number: "{{ bgp['local_as']}}"
      address_family:
        - afi: "ipv4"
          neighbor:
            - peer: "{{ bgp['underlay_pg_id'] }}"
              activate: True
              # next_hop_address_family: "ipv6" # ipv6 w/ originate doesn't seem to be supported
  when: 
    - bgp.underlay_pg_id is defined

# Can't get ipv6 originate working in eos_bgp_address_family either
- name: Configure ipv6 originate (Leaf + Spine)
  arista.eos.eos_config:
    lines:
      - "neighbor {{ bgp['underlay_pg_id'] }} next-hop address-family ipv6 originate"
    parents:
      - "router bgp {{bgp['local_as']}}"
      - "address-family ipv4"
  when:
    - bgp.underlay_pg_id is defined